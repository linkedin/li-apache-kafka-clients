/*
 * Copyright 2017 LinkedIn Corp.
 * Licensed under the BSD 2-Clause License (the "License").â€¨
 * See License in the project root for license information.
 */
plugins {
  id "com.jfrog.artifactory"
  id "idea"
}

group = 'com.linkedin.kafka.clients'

project.ext {
  pomConfig = {
    url "https://github.com/linkedin/li-apache-kafka-clients"
    licenses {
      license {
        name "BSD 2-CLAUSE LICENSE"
        url "https://opensource.org/licenses/BSD-2-Clause"
      }
    }
    developers {
      developer {
        name "Sir Joel Koshy"
        email "jjkoshy@yahoo.com"
      }
      developer {
        name "Jiangjie (Becket) Qin"
        email "becket.qin@gmail.com"
      }
      developer {
        name "Dong Lin"
        email "lindong28@gmail.com"
      }
      developer {
        name "Sean Mccauliff"
        email "smccauliff@linkedin.com"
      }
    }
    scm {
      url "https://github.com/linkedin/li-apache-kafka-clients"
    }
  }
  kafkaVersion = "0.10.2.1"
}

subprojects {

  group = rootProject.group
  version = rootProject.version

  plugins.withType(JavaPlugin) {
    plugins.apply('checkstyle')

    repositories {
      jcenter()
    }

    dependencies {
      testCompile 'org.testng:testng:6.11'
    }

    compileJava {
      sourceCompatibility = '1.8'
      targetCompatibility = '1.8'
      options.encoding = 'UTF-8'
    }

    compileTestJava {
      options.encoding = 'UTF-8'
    }

    test {
      useTestNG()
      maxHeapSize = "1024m"
      testLogging {
        events "passed", "failed", "skipped"
      }
    }

    checkstyle {
      configDir = rootProject.file('config/checkstyle')
      toolVersion = '8.4'
    }

    test.dependsOn('checkstyleMain', 'checkstyleTest')

    task sourcesJar(type: Jar, dependsOn: classes) {
      classifier = 'sources'
      from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
      classifier = 'javadoc'
      from javadoc.destinationDir
    }

    artifacts {
      archives sourcesJar
      archives javadocJar
    }
  }
}

artifactoryPublish.skip = true
artifactory {
    contextUrl = 'https://linkedin.jfrog.io/linkedin'
    publish {
        repoKey = 'li-apache-kafka-clients'
        username = System.getenv('ARTIFACTORY_USER')
        password = System.getenv('ARTIFACTORY_KEY')

        defaults {
            publications ('java')
            publishBuildInfo = true
            publishArtifacts = true
            publishPom = true
            publishIvy = true
        }
    }
    clientConfig.setIncludeEnvVars(false)
}

task distributeBuild(type: com.linkedin.gradle.build.DistributeTask) {
    dependsOn ':artifactoryPublish', ':li-apache-kafka-clients:artifactoryPublish', ':kafka-test-harness:artifactoryPublish'
}

//wrapper generation task
task wrapper(type: Wrapper) {
  gradleVersion = '4.3.1'
  distributionType = Wrapper.DistributionType.ALL
}